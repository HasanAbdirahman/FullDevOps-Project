name: CI/CD DevOps Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push-images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx (for caching and multi-platform builds)
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/devops-backend:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/app
          push: true
          build-args: |
            REACT_APP_API_URL=http://backend-service:4000/api
          tags: ${{ secrets.DOCKER_USERNAME }}/devops-frontend:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache


  deploy-to-terraform:
    name: Deploy EKS with Terraform
    runs-on: ubuntu-latest
    needs: build-and-push-images

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Terraform Init
        run: |
          cd Terraform
          terraform init -upgrade

      - name: Terraform Plan
        run: |
          cd Terraform
          terraform plan

      - name: Terraform Apply
        run: |
          cd Terraform
          terraform apply -auto-approve


  deploy-to-kubernetes:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: deploy-to-terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.0'

      - name: Get kubeconfig from AWS EKS
        run: |
          aws eks update-kubeconfig --name devops-eks-cluster --region us-east-1

      - name: Deploy Backend
        run: |
          kubectl apply -f K8/backend/

      - name: Deploy Frontend
        run: |
          kubectl apply -f K8/frontend/
